-- LocalScript placed in StarterPlayer > StarterPlayerScripts

-- Variables
local player = game.Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local tracePart = nil
local traceInterval = 0.1  -- How frequently to update the position (in seconds)
local trackingDistance = 50  -- Maximum distance to track players in front
local userInputService = game:GetService("UserInputService")
local touchInput = nil -- Store the touch input for mobile

-- Function to create a visual trace part
local function createTracePart()
    local part = Instance.new("Part")
    part.Size = Vector3.new(1, 1, 1)
    part.Shape = Enum.PartType.Ball
    part.Color = Color3.fromRGB(255, 0, 0)  -- Color the trace red
    part.Anchored = true
    part.CanCollide = false
    part.Parent = workspace
    return part
end

-- Function to determine if a player is in front of the local player
local function isInFrontOfPlayer(target)
    local targetHumanoidRootPart = target.Character:FindFirstChild("HumanoidRootPart")
    if not targetHumanoidRootPart then return false end

    -- Get the position of the local player and the target player
    local playerPosition = player.Character:FindFirstChild("HumanoidRootPart").Position
    local targetPosition = targetHumanoidRootPart.Position

    -- Calculate the direction vector from the player to the target
    local directionToTarget = (targetPosition - playerPosition).unit

    -- Get the forward vector of the player's camera (local player facing direction)
    local cameraForward = camera.CFrame.LookVector

    -- Calculate the dot product to check if the target is in front of the player
    local dotProduct = directionToTarget:Dot(cameraForward)

    -- If the dot product is positive and the distance is within range, the player is in front
    if dotProduct > 0 and (targetPosition - playerPosition).magnitude <= trackingDistance then
        return true
    else
        return false
    end
end

-- Function to simulate a mouse click (left mouse button press)
local function simulateMouseClick()
    if userInputService.TouchEnabled then
        -- Simulate touch event (M1 for mobile)
        local input = Instance.new("InputObject")
        input.UserInputType = Enum.UserInputType.Touch
        input.UserInputState = Enum.UserInputState.Begin
        userInputService.InputBegan:Fire(input)

        -- End the touch event (simulate M1 release for mobile)
        input.UserInputState = Enum.UserInputState.End
        userInputService.InputEnded:Fire(input)
    else
        -- Simulate M1 mouse press for desktop
        local inputBegin = Instance.new("InputObject")
        inputBegin.UserInputType = Enum.UserInputType.MouseButton1
        inputBegin.UserInputState = Enum.UserInputState.Begin
        userInputService.InputBegan:Fire(inputBegin)

        -- Simulate M1 mouse release
        local inputEnd = Instance.new("InputObject")
        inputEnd.UserInputType = Enum.UserInputType.MouseButton1
        inputEnd.UserInputState = Enum.UserInputState.End
        userInputService.InputEnded:Fire(inputEnd)
    end
end

-- Function to track the players in front
local function trackPlayersInFront()
    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            if isInFrontOfPlayer(otherPlayer) then
                local humanoidRootPart = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    -- If no trace part exists, create one
                    if not tracePart then
                        tracePart = createTracePart()
                    end
                    -- Update the trace part's position to follow the target player's humanoid root part
                    tracePart.Position = humanoidRootPart.Position

                    -- Automatically simulate the mouse or touch click (M1 press)
                    simulateMouseClick()
                end
            end
        end
    end
end

-- Listen for updates and track players in front every 'traceInterval'
while true do
    trackPlayersInFront()
    wait(traceInterval)
end
